name: Daily Movie Data Update

on:
  schedule:
    # 每天台灣時間上午 11:00 運行 (UTC+8)，對應 UTC 時間 03:00
    - cron: '0 3 * * *'
  # 允許手動觸發工作流程
  workflow_dispatch:

jobs:
  update-movie-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          cd backend/scripts/scrapers
          pip install requests beautifulsoup4 pandas lxml aiohttp asyncio psycopg2-binary

      - name: Create necessary directories
        run: |
          mkdir -p backend/output/scrapers
          mkdir -p backend/output/cache

      # 設置時區為台灣時間 (UTC+8)
      - name: Set timezone
        run: |
          sudo timedatectl set-timezone Asia/Taipei
          echo "當前時間: $(date)"

      # 執行 ATMovies 電影爬蟲
      - name: Run ATMovies movie scraper
        run: |
          cd backend/scripts/scrapers
          python atmovies_movie_scraper_v2.py

      - name: Import movie data to remote database
        run: |
          # 查找最新的電影CSV文件
          LATEST_CSV=$(find backend/scripts/scrapers -name "atmovies_movies_*.csv" -type f -printf "%T@ %p\n" | sort -n | tail -1 | cut -f2- -d" ")
          if [ -n "$LATEST_CSV" ]; then
            echo "使用最新電影文件進行匯入: $LATEST_CSV"
            # 安裝所需套件
            npm install pg csv-parser
            
            # 執行匯入腳本
            node scripts/importers/import_movies_remote.js "$LATEST_CSV"
            echo "電影資料匯入完成"
          else
            echo "未找到電影文件，跳過匯入步驟"
        env:
          DATABASE_URL: postgresql://time2cinema_db_user:wUsukaH2Kiy8fIejuOqsk5yjn4FBb0RX@dpg-d0e9e749c44c73co4lsg-a.singapore-postgres.render.com/time2cinema_db
          
      # 記錄執行結果
      - name: Create log file
        run: |
          echo "Movie data update completed at $(date)" > movie_update_log.txt
          echo "Movie files:" >> movie_update_log.txt
          find backend/scripts/scrapers -name "atmovies_movies_*.csv" -type f -printf "%T@ %p\n" | sort -n >> movie_update_log.txt || echo "No movie files found" >> movie_update_log.txt
          
      # 提交更新的資料文件
      - name: Commit and push updated data files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git fetch
          git checkout main
          git add backend/scripts/scrapers/atmovies_movies_*.csv movie_update_log.txt || true
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto update movie data $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
        continue-on-error: true
